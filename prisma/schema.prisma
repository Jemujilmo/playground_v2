// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  password     String
  rooms        Room[]   @relation("UserRooms")
  messages     Message[]
  createdRooms Room[]   @relation("RoomCreator")
  invites      Invite[] @relation("UserInvites")
  sentInvites  Invite[] @relation("InviteFrom")
  status       String?
}

model Room {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  creator   User     @relation("RoomCreator", fields: [creatorId], references: [id])
  creatorId Int
  members   User[]   @relation("UserRooms")
  messages  Message[]
  invites   Invite[]
}

model Message {
  id        Int      @id @default(autoincrement())
  text      String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    Int
  createdAt DateTime @default(now())
}

model Invite {
  id        Int      @id @default(autoincrement())
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    Int
  user      User     @relation("UserInvites", fields: [userId], references: [id])
  userId    Int
  from      User     @relation("InviteFrom", fields: [fromId], references: [id])
  fromId    Int
  createdAt DateTime @default(now())
}
